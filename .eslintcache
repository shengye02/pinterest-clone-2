[{"/Users/jessythe/pinterest-clone/src/components/App.js":"1","/Users/jessythe/pinterest-clone/src/components/Mainboard.js":"2","/Users/jessythe/pinterest-clone/src/components/Header.js":"3","/Users/jessythe/pinterest-clone/src/reportWebVitals.js":"4","/Users/jessythe/pinterest-clone/src/api/unsplash.js":"5","/Users/jessythe/pinterest-clone/src/index.js":"6","/Users/jessythe/pinterest-clone/src/components/BoardPage.js":"7","/Users/jessythe/pinterest-clone/src/components/BoardHeader.js":"8","/Users/jessythe/pinterest-clone/src/components/Pin.js":"9","/Users/jessythe/pinterest-clone/src/components/Board.js":"10","/Users/jessythe/pinterest-clone/src/firebase.js":"11","/Users/jessythe/pinterest-clone/src/components/UserBoardHeader.js":"12","/Users/jessythe/pinterest-clone/src/components/UserBoard.js":"13","/Users/jessythe/pinterest-clone/src/components/Modal.js":"14"},{"size":2713,"mtime":1608151165970,"results":"15","hashOfConfig":"16"},{"size":767,"mtime":1608150817098,"results":"17","hashOfConfig":"16"},{"size":3363,"mtime":1608145124522,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1606948992933,"results":"19","hashOfConfig":"16"},{"size":244,"mtime":1608141729040,"results":"20","hashOfConfig":"16"},{"size":511,"mtime":1608073173936,"results":"21","hashOfConfig":"16"},{"size":1442,"mtime":1608143975955,"results":"22","hashOfConfig":"16"},{"size":7999,"mtime":1608127048256,"results":"23","hashOfConfig":"16"},{"size":3379,"mtime":1608151083395,"results":"24","hashOfConfig":"16"},{"size":966,"mtime":1608144622069,"results":"25","hashOfConfig":"16"},{"size":617,"mtime":1608075209463,"results":"26","hashOfConfig":"16"},{"size":8577,"mtime":1608144525548,"results":"27","hashOfConfig":"16"},{"size":484,"mtime":1608145063532,"results":"28","hashOfConfig":"16"},{"size":3953,"mtime":1608144135208,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cbspjm",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/Users/jessythe/pinterest-clone/src/components/App.js",["60","61","62","63"],"/Users/jessythe/pinterest-clone/src/components/Mainboard.js",[],"/Users/jessythe/pinterest-clone/src/components/Header.js",[],"/Users/jessythe/pinterest-clone/src/reportWebVitals.js",[],["64","65"],"/Users/jessythe/pinterest-clone/src/api/unsplash.js",[],"/Users/jessythe/pinterest-clone/src/index.js",[],"/Users/jessythe/pinterest-clone/src/components/BoardPage.js",[],"/Users/jessythe/pinterest-clone/src/components/BoardHeader.js",["66"],"/Users/jessythe/pinterest-clone/src/components/Pin.js",["67","68","69"],"/Users/jessythe/pinterest-clone/src/components/Board.js",["70"],"/Users/jessythe/pinterest-clone/src/firebase.js",[],"/Users/jessythe/pinterest-clone/src/components/UserBoardHeader.js",[],"/Users/jessythe/pinterest-clone/src/components/UserBoard.js",[],"/Users/jessythe/pinterest-clone/src/components/Modal.js",["71","72"],"import React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport firebase from \"firebase\";\n\nconst Modal = (props) => {\n  let { id, description, height, urls } = props;\n  const [boardName, setBoard] = useState(\"\");\n  const [boardSubmitted, setNewBoard] = useState(false);\n  const [warning, setWarning] = useState(false);\n  const [boardId, setBoardId] = useState(\"\");\n  const myRef = useRef();\n\n  if (description && description.length > 37) {\n    let sentence = description.split(\".\");\n    description = sentence[0] + \".\";\n  }\n\n  const openModal = () => {\n    props.openModal();\n  };\n\n  const addBoard = (boardName) => {\n    if (boardName) {\n      db.collection(\"boards\")\n        .add({\n          name: boardName,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        .then(function (docRef) {\n          db.collection(\"boards\")\n            .doc(docRef.id)\n            .collection(\"pins\")\n            .add({\n              id: id,\n              urls: urls?.regular ? urls.full : urls,\n              height: height,\n              description: description,\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n          setBoardId(docRef.id);\n          setNewBoard(boardName);\n        });\n    }\n  };\n\n  const isValid = (boardName) => {\n    if (boardName == \" \" || boardName == \"\") {\n      return false;\n    }\n\n    let double = [];\n    db.collection(\"boards\")\n      .where(\"name\", \"==\", boardName)\n      .get()\n      .then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          double.push({ id: doc.id, data: doc.data() });\n        });\n      })\n      .then(() => {\n        if (double[0]) {\n          setWarning(boardName);\n        } else {\n          addBoard(boardName);\n        }\n      });\n  };\n\n  const submitBoard = (e) => {\n    e.preventDefault();\n    isValid(boardName);\n    props.submitBoard(boardName);\n  };\n\n  const clickOutside = (e) => {\n    if (!myRef.current.contains(e.target)) {\n      props.clickOutside(false);\n    }\n  };\n\n  return (\n    <div className=\"modal\" onClick={clickOutside}>\n      <div className=\"modal__content\" ref={myRef}>\n        <div className=\"modal__content__intro\">\n          <h1> Create a board</h1>\n        </div>\n        <div className=\"modal__content__boardDetails\">\n          <div className=\"modal__left\">\n            <img\n              src={urls?.regular ? urls.full : urls}\n              alt=\"modal\"\n              className=\"image\"\n            />\n          </div>\n          <div className=\"modal__right\">\n            <div className=\"modal_right__intro\">\n              <p> Name</p>\n            </div>\n            <form>\n              <input\n                type=\"text\"\n                value={boardName}\n                onChange={(e) => setBoard(e.target.value)}\n              />\n              <button onClick={submitBoard} type=\"submit\"></button>\n            </form>\n          </div>\n        </div>\n        {boardSubmitted && (\n          <div className=\"alert__boardsubmitted\">\n            <div className=\"alert__boardsubmitted__container__succes\">\n              <h1> Alright! You created a new board named: {boardName} </h1>\n              <Link to={`/boardPage/${boardId}`}> Go to board here </Link>\n            </div>\n          </div>\n        )}\n        {warning && (\n          <div className=\"alert__boardsubmitted\">\n            <div className=\"alert__boardsubmitted__container__warning\">\n              <h1>\n                Either your board name is empty or this board already exists:{\" \"}\n                {boardName}\n              </h1>\n            </div>\n          </div>\n        )}\n        <div className=\"modal__content__buttons\">\n          <button onClick={openModal}>Cancel</button>\n          <button onClick={submitBoard} type=\"submit\">\n            Create\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n",{"ruleId":"73","severity":1,"message":"74","line":46,"column":30,"nodeType":"75","messageId":"76","endLine":46,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":50,"column":34,"nodeType":"75","messageId":"76","endLine":50,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":71,"column":33,"nodeType":"75","messageId":"76","endLine":71,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":84,"column":6,"nodeType":"79","endLine":84,"endColumn":8,"suggestions":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":15},{"ruleId":"85","severity":1,"message":"89","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":33},{"ruleId":"85","severity":1,"message":"90","line":12,"column":21,"nodeType":"87","messageId":"88","endLine":12,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":43,"column":12,"nodeType":"93","messageId":"94","endLine":43,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":24,"column":7,"nodeType":"97","endLine":24,"endColumn":78},{"ruleId":"91","severity":1,"message":"92","line":48,"column":19,"nodeType":"93","messageId":"94","endLine":48,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":48,"column":39,"nodeType":"93","messageId":"94","endLine":48,"endColumn":41},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNewPins'. Either include it or remove the dependency array.","ArrayExpression",["98"],"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'AddIcon' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'setBoard' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getMyNewPins]",{"range":"103","text":"104"},[2114,2116],"[getMyNewPins]"]