[{"/Users/jessythe/pinterest-clone/src/components/App.js":"1","/Users/jessythe/pinterest-clone/src/components/Mainboard.js":"2","/Users/jessythe/pinterest-clone/src/components/Header.js":"3","/Users/jessythe/pinterest-clone/src/reportWebVitals.js":"4","/Users/jessythe/pinterest-clone/src/api/unsplash.js":"5","/Users/jessythe/pinterest-clone/src/index.js":"6","/Users/jessythe/pinterest-clone/src/components/BoardPage.js":"7","/Users/jessythe/pinterest-clone/src/components/BoardHeader.js":"8","/Users/jessythe/pinterest-clone/src/components/Pin.js":"9","/Users/jessythe/pinterest-clone/src/components/Board.js":"10","/Users/jessythe/pinterest-clone/src/firebase.js":"11","/Users/jessythe/pinterest-clone/src/components/UserBoardHeader.js":"12","/Users/jessythe/pinterest-clone/src/components/UserBoard.js":"13","/Users/jessythe/pinterest-clone/src/components/Modal.js":"14"},{"size":3134,"mtime":1608219727548,"results":"15","hashOfConfig":"16"},{"size":822,"mtime":1608219680557,"results":"17","hashOfConfig":"16"},{"size":3363,"mtime":1608145124522,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1606948992933,"results":"19","hashOfConfig":"16"},{"size":244,"mtime":1608141729040,"results":"20","hashOfConfig":"16"},{"size":511,"mtime":1608073173936,"results":"21","hashOfConfig":"16"},{"size":1315,"mtime":1608154321979,"results":"22","hashOfConfig":"16"},{"size":7999,"mtime":1608127048256,"results":"23","hashOfConfig":"16"},{"size":5178,"mtime":1608239195494,"results":"24","hashOfConfig":"16"},{"size":966,"mtime":1608144622069,"results":"25","hashOfConfig":"16"},{"size":617,"mtime":1608075209463,"results":"26","hashOfConfig":"16"},{"size":8577,"mtime":1608144525548,"results":"27","hashOfConfig":"16"},{"size":484,"mtime":1608145063532,"results":"28","hashOfConfig":"16"},{"size":4004,"mtime":1608219661139,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"cbspjm",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jessythe/pinterest-clone/src/components/App.js",["61","62","63","64"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Mainboard from \"./Mainboard\";\nimport UserBoard from \"./UserBoard\";\nimport unsplash from \"../api/unsplash\";\nimport db from \"../firebase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport BoardPage from \"./BoardPage\";\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [boardsToPick, setBoardsToPick] = useState([]);\n\n  const makeAPICall = (term) => {\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: { query: term },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    let promises = [];\n    let searchedPins = [];\n    promises.push(\n      makeAPICall(term).then((res) => {\n        searchedPins.push(res.data.results);\n      })\n    );\n    Promise.all(promises).then(() => {\n      setNewPins(searchedPins);\n    });\n  };\n\n  const getMyNewPins = () => {\n    let promises = [];\n    let pinData = [];\n\n    db.collection(\"terms\").onSnapshot((snapshot) => {\n      let snapshotData = snapshot.docs;\n      if (snapshotData.length >= 10) {\n        snapshotData = snapshotData.slice(\n          snapshotData.length - 5,\n          snapshotData.length\n        );\n      }\n      snapshotData.map((doc) => {\n        promises.push(\n          makeAPICall(doc.data().term).then((res) => {\n            let results = res.data.results;\n            results.map((object) => {\n              pinData.push(object);\n            });\n\n            pinData.sort(function (a, b) {\n              return 0.5 - Math.random();\n            });\n          })\n        );\n      });\n      Promise.all(promises).then(() => {\n        setNewPins(pinData);\n      });\n    });\n  };\n\n  const getMyBoards = () => {\n    let boards = [];\n    let boardsToPick;\n    db.collection(\"boards\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.map((doc) => {\n          boards.push({\n            id: doc.id,\n            data: doc.data(),\n          });\n        });\n        Promise.all(boards).then((results) => {\n          boardsToPick = results;\n          if (results.length >= 3) {\n            boardsToPick = results.slice(Math.max(results.length - 3, 0));\n          }\n          setBoardsToPick(boardsToPick);\n          setBoards(boards);\n        });\n      });\n  };\n\n  useEffect(() => {\n    getMyNewPins();\n    getMyBoards();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/mainboard\">\n            <Header onSubmit={onSearchSubmit} />\n            <Mainboard\n              pins={pins}\n              getBoards={getMyBoards}\n              boardsToPick={boardsToPick}\n            />\n          </Route>\n          <Route path=\"/userBoard\">\n            <Header onSubmit={onSearchSubmit} />\n            <UserBoard boards={boards} />\n          </Route>\n          <Route path=\"/boardPage/:boardId\">\n            <Header onSubmit={onSearchSubmit} />\n            <BoardPage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jessythe/pinterest-clone/src/components/Mainboard.js",[],"/Users/jessythe/pinterest-clone/src/components/Header.js",[],"/Users/jessythe/pinterest-clone/src/reportWebVitals.js",[],["65","66"],"/Users/jessythe/pinterest-clone/src/api/unsplash.js",[],"/Users/jessythe/pinterest-clone/src/index.js",[],"/Users/jessythe/pinterest-clone/src/components/BoardPage.js",[],"/Users/jessythe/pinterest-clone/src/components/BoardHeader.js",["67"],"/Users/jessythe/pinterest-clone/src/components/Pin.js",["68","69","70","71","72","73","74"],"import React, { useState, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Modal from \"./Modal\";\nimport \"./Modal.css\";\n\nconst Pin = (props) => {\n  let { id, description, height, urls, page, boardsToPick } = props;\n  const [clickOpen, setClickOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [boardName, setBoard] = useState(\"\");\n  const history = useHistory();\n\n  if (description && description.length > 37) {\n    let sentence = description.split(\".\");\n    description = sentence[0] + \".\";\n  }\n\n  const onClick = () => {\n    console.log(\"is onClick getting clicked too?\");\n    setClickOpen((openState) => !openState);\n  };\n\n  const openModal = () => {\n    setModalOpen((openState) => !openState);\n  };\n\n  const submitBoard = (e) => {\n    props.onSubmit(boardName);\n  };\n\n  const clickOutside = (e) => {\n    setModalOpen(false);\n  };\n\n  const searchBoard = (e) => {\n    console.log(\"searching an existing board\");\n    console.log(e.target.value, \" what is in e target alue\");\n  };\n\n  const pinToBoard = (e) => {\n    e.stopPropagation();\n    console.log(\"pinning to board\");\n    //pinning current pin to an existing board.\n    // look for existing board in firebase;\n    // add it to collections of pins with certain information\n    // get redirected to BoardPage where you see the new pinned pin immediately\n    // history.push(`/boardPage/${boardId}`);\n  };\n\n  let sizePin = \"small\";\n  if (height >= 4000) {\n    sizePin = \"medium\";\n  } else {\n    sizePin = \"small\";\n  }\n\n  let mainBoardPage = false;\n  if (page == \"mainBoard\") {\n    mainBoardPage = true;\n  }\n\n  return (\n    <div className=\"pin\">\n      <div className=\"pin__container\" key={id}>\n        <div className={`pin__container ${sizePin}`}>\n          <img\n            src={urls?.regular ? urls.full : urls}\n            className=\"image\"\n            alt=\"pin\"\n          />\n          {mainBoardPage && (\n            <div className=\"layer\">\n              <div className=\"pin__boards__menu\">\n                <div className=\"pin__boards__menu left\">\n                  <div className=\"pin__boards__menuDetails\">\n                    <h1>Boards</h1>\n                    <KeyboardArrowDownIcon onClick={onClick} />\n                  </div>\n                  {clickOpen ? (\n                    <div className=\"pin__dropdown\">\n                      <div className=\"pin__dropdown__search\">\n                        <div className=\"pin__dropdown__searchContainer\">\n                          <SearchIcon />\n                          <form>\n                            <input\n                              placeholder=\"Search\"\n                              type=\"text\"\n                              onChange={(e) => console.log(e.target.value)}\n                            />\n                          </form>\n                        </div>\n                      </div>\n                      <div className=\"pin__dropdown__boardsToPick\">\n                        <p>All boards</p>\n                        {boardsToPick.map((board) => {\n                          return (\n                            <div className=\"boardToPick\">\n                              <div className=\"boardToPick__box\" key={board.id}>\n                                <div className=\"boardToPick__box__details\">\n                                  <img\n                                    src={board.data?.image}\n                                    alt=\"picture\"\n                                    className=\"image\"\n                                  />\n                                  <p> {board.data?.name}</p>\n                                  <div className=\"boardToPick__saveButton\">\n                                    <p onClick={pinToBoard(board?.id)}> Save</p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                      <div className=\"pin__dropdown__createBoard\">\n                        <AddCircleIcon onClick={openModal} />\n                        <p> Create board</p>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"pin__boards__menu right\">\n                  <div className=\"pin__boards__menuDetails\">\n                    <h1>Save</h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          <div className=\"pin__text__container\">\n            <p>{description}</p>\n          </div>\n        </div>\n      </div>\n      {modalOpen ? (\n        <Modal\n          clickOutside={clickOutside}\n          openModal={openModal}\n          submitBoard={submitBoard}\n          urls={urls?.regular ? urls.full : urls}\n          id={id}\n          description={description}\n          height={height}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pin;\n","/Users/jessythe/pinterest-clone/src/components/Board.js",["75"],"/Users/jessythe/pinterest-clone/src/firebase.js",[],"/Users/jessythe/pinterest-clone/src/components/UserBoardHeader.js",[],"/Users/jessythe/pinterest-clone/src/components/UserBoard.js",[],"/Users/jessythe/pinterest-clone/src/components/Modal.js",["76","77"],{"ruleId":"78","severity":1,"message":"79","line":47,"column":30,"nodeType":"80","messageId":"81","endLine":47,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":51,"column":34,"nodeType":"80","messageId":"81","endLine":51,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":73,"column":33,"nodeType":"80","messageId":"81","endLine":73,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":93,"column":6,"nodeType":"84","endLine":93,"endColumn":8,"suggestions":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"94","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":33},{"ruleId":"90","severity":1,"message":"95","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"96","line":13,"column":21,"nodeType":"92","messageId":"93","endLine":13,"endColumn":29},{"ruleId":"90","severity":1,"message":"97","line":14,"column":9,"nodeType":"92","messageId":"93","endLine":14,"endColumn":16},{"ruleId":"90","severity":1,"message":"98","line":38,"column":9,"nodeType":"92","messageId":"93","endLine":38,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":61,"column":12,"nodeType":"101","messageId":"102","endLine":61,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":103,"column":35,"nodeType":"105","endLine":107,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":24,"column":7,"nodeType":"105","endLine":24,"endColumn":78},{"ruleId":"99","severity":1,"message":"100","line":49,"column":19,"nodeType":"101","messageId":"102","endLine":49,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":49,"column":39,"nodeType":"101","messageId":"102","endLine":49,"endColumn":41},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNewPins'. Either include it or remove the dependency array.","ArrayExpression",["106"],"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'AddIcon' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Link' is defined but never used.","'setBoard' is assigned a value but never used.","'history' is assigned a value but never used.","'searchBoard' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"109","fix":"110"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getMyNewPins]",{"range":"111","text":"112"},[2453,2455],"[getMyNewPins]"]