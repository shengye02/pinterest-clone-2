[{"/Users/jessythe/pinterest-clone/src/components/App.js":"1","/Users/jessythe/pinterest-clone/src/components/Pin.js":"2","/Users/jessythe/pinterest-clone/src/components/Header.js":"3","/Users/jessythe/pinterest-clone/src/firebase.js":"4","/Users/jessythe/pinterest-clone/src/components/Mainboard.js":"5","/Users/jessythe/pinterest-clone/src/components/Board.js":"6","/Users/jessythe/pinterest-clone/src/components/BoardPage.js":"7"},{"size":3125,"mtime":1613414676628,"results":"8","hashOfConfig":"9"},{"size":4692,"mtime":1613414478439,"results":"10","hashOfConfig":"9"},{"size":2203,"mtime":1613175638068,"results":"11","hashOfConfig":"9"},{"size":599,"mtime":1613177281471,"results":"12","hashOfConfig":"9"},{"size":833,"mtime":1613414565536,"results":"13","hashOfConfig":"9"},{"size":966,"mtime":1608144622069,"results":"14","hashOfConfig":"9"},{"size":1315,"mtime":1608154321979,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"cbspjm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessythe/pinterest-clone/src/components/App.js",["33","34","35","36"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Mainboard from \"./Mainboard\";\nimport UserBoard from \"./UserBoard\";\nimport unsplash from \"../api/unsplash\";\nimport db from \"../firebase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport BoardPage from \"./BoardPage\";\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [boardsToPick, setBoardsToPick] = useState([]);\n\n  const makeAPICall = (term) => {\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: { query: term },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    let promises = [];\n    let searchedPins = [];\n    promises.push(\n      makeAPICall(term).then((res) => {\n        searchedPins.push(res.data.results);\n      })\n    );\n    Promise.all(promises).then(() => {\n      setNewPins(searchedPins);\n    });\n  };\n\n  const getMyNewPins = () => {\n    let promises = [];\n    let pinData = [];\n\n    db.collection(\"terms\").onSnapshot((snapshot) => {\n      let snapshotData = snapshot.docs;\n      if (snapshotData.length >= 10) {\n        snapshotData = snapshotData.slice(\n          snapshotData.length - 5,\n          snapshotData.length\n        );\n      }\n      snapshotData.map((doc) => {\n        promises.push(\n          makeAPICall(doc.data().term).then((res) => {\n            let results = res.data.results;\n            results.map((object) => {\n              pinData.push(object);\n            });\n\n            pinData.sort(function (a, b) {\n              return 0.5 - Math.random();\n            });\n          })\n        );\n      });\n      Promise.all(promises).then(() => {\n        setNewPins(pinData);\n      });\n    });\n  };\n\n  const getMyBoards = () => {\n    let boards = [];\n    let boardsToPick;\n    db.collection(\"boards\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.map((doc) => {\n          boards.push({\n            id: doc.id,\n            data: doc.data(),\n          });\n        });\n        Promise.all(boards).then((results) => {\n          boardsToPick = results;\n          if (results.length >= 3) {\n            boardsToPick = results.slice(Math.max(results.length - 3, 0));\n          }\n          setBoardsToPick(boardsToPick);\n          setBoards(boards);\n        });\n      });\n  };\n\n  useEffect(() => {\n    getMyNewPins();\n    getMyBoards();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/userBoard\">\n            <Header onSubmit={onSearchSubmit} />\n            <UserBoard boards={boards} />\n          </Route>\n          <Route path=\"/boardPage/:boardId\">\n            <Header onSubmit={onSearchSubmit} />\n            <BoardPage />\n          </Route>\n          <Route path=\"/\">\n            <Header onSubmit={onSearchSubmit} />\n            <Mainboard\n              pins={pins}\n              getBoards={getMyBoards}\n              boardsToPick={boardsToPick}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jessythe/pinterest-clone/src/components/Pin.js",["37","38","39","40","41"],"import React, { useState } from \"react\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Modal from \"./Modal\";\nimport \"./Modal.css\";\n\nconst Pin = (props) => {\n  let { id, description, height, urls, page, boardsToPick } = props;\n  const [clickOpen, setClickOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [boardName, setBoard] = useState(\"\");\n\n  if (description && description.length > 37) {\n    let sentence = description.split(\".\");\n    description = sentence[0] + \".\";\n  }\n\n  const onClick = () => {\n    setClickOpen((openState) => !openState);\n  };\n\n  const openModal = () => {\n    setModalOpen((openState) => !openState);\n  };\n\n  const submitBoard = (e) => {\n    props.onSubmit(boardName);\n  };\n\n  const clickOutside = (e) => {\n    setModalOpen(false);\n  };\n\n  const searchBoard = (e) => {};\n\n  const pinToBoard = (e) => {\n    e.stopPropagation();\n    //pinning current pin to an existing board.\n    // look for existing board in firebase;\n    // add it to collections of pins with certain information\n    // get redirected to BoardPage where you see the new pinned pin immediately\n    // history.push(`/boardPage/${boardId}`);\n  };\n\n  let sizePin = \"small\";\n  if (height >= 4000) {\n    sizePin = \"medium\";\n  } else {\n    sizePin = \"small\";\n  }\n\n  let mainBoardPage = false;\n  if (page == \"mainBoard\") {\n    mainBoardPage = true;\n  }\n\n  return (\n    <div className=\"pin\">\n      <div className=\"pin__container\" key={id}>\n        <img\n          src={urls?.regular ? urls.full : urls}\n          className=\"image\"\n          alt=\"pin\"\n        />\n        {mainBoardPage && (\n          <div className=\"layer\">\n            <div className=\"pin__boards__menu\">\n              <div className=\"pin__boards__menu left\">\n                <div className=\"pin__boards__menuDetails\">\n                  <h1>Boards</h1>\n                  <KeyboardArrowDownIcon onClick={onClick} />\n                </div>\n                {clickOpen ? (\n                  <div className=\"pin__dropdown\">\n                    <div className=\"pin__dropdown__search\">\n                      <div className=\"pin__dropdown__searchContainer\">\n                        <SearchIcon />\n                        <form>\n                          <input\n                            placeholder=\"Search\"\n                            type=\"text\"\n                            onChange={(e) => console.log(e.target.value)}\n                          />\n                        </form>\n                      </div>\n                    </div>\n                    <div className=\"pin__dropdown__boardsToPick\">\n                      <p>All boards</p>\n                      {boardsToPick.map((board) => {\n                        return (\n                          <div className=\"boardToPick\">\n                            <div className=\"boardToPick__box\" key={board.id}>\n                              <div className=\"boardToPick__box__details\">\n                                <img\n                                  src={board.data?.image}\n                                  alt=\"picture\"\n                                  className=\"image\"\n                                />\n                                <p> {board.data?.name}</p>\n                                <div className=\"boardToPick__saveButton\">\n                                  <p onClick={pinToBoard(board?.id)}> Save</p>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                    <div className=\"pin__dropdown__createBoard\">\n                      <AddCircleIcon onClick={openModal} />\n                      <p> Create board</p>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"pin__boards__menu right\">\n                <div className=\"pin__boards__menuDetails\">\n                  <h1>Save</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {/* <div className=\"pin__text__container\">\n            <p>{description}</p>\n          </div> */}\n      </div>\n      {modalOpen ? (\n        <Modal\n          clickOutside={clickOutside}\n          openModal={openModal}\n          submitBoard={submitBoard}\n          urls={urls?.regular ? urls.full : urls}\n          id={id}\n          description={description}\n          height={height}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pin;\n","/Users/jessythe/pinterest-clone/src/components/Header.js",["42","43"],"import React, { useState } from \"react\";\nimport PinterestIcon from \"@material-ui/icons/Pinterest\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { IconButton } from \"@material-ui/core\";\nimport \"./Header.css\";\nimport db from \"../firebase\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  const [clickOpen, setClickOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n\n  const onClick = () => {\n    setClickOpen((openState) => !openState);\n  };\n\n  const onSearchSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit(input);\n    if (input) {\n      db.collection(\"terms\").add({\n        term: input,\n      });\n    }\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\">\n        <Link to=\"/mainBoard\">\n          <IconButton>\n            <PinterestIcon />\n          </IconButton>\n        </Link>\n      </div>\n      <div className=\"header__button homePage\">\n        <a href=\"/\">Homepage</a>\n      </div>\n      <div className=\"header__button following\">\n        <a href=\"/\">Following</a>\n      </div>\n      <div className=\"header__search\">\n        <div className=\"header__searchContainer\">\n          <SearchIcon />\n          <form>\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button onClick={onSearchSubmit} type=\"submit\">\n              Send a message\n            </button>\n          </form>\n        </div>\n      </div>\n      <div className=\"header__menuItems\">\n        <IconButton>\n          <NotificationsIcon />\n        </IconButton>\n        <IconButton>\n          <TextsmsIcon />\n        </IconButton>\n        <Link to=\"/userBoard\">\n          <IconButton>\n            <FaceIcon />\n          </IconButton>\n        </Link>\n        <IconButton size=\"small\">\n          <KeyboardArrowDownIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/jessythe/pinterest-clone/src/firebase.js",[],"/Users/jessythe/pinterest-clone/src/components/Mainboard.js",[],"/Users/jessythe/pinterest-clone/src/components/Board.js",["44"],"/Users/jessythe/pinterest-clone/src/components/BoardPage.js",[],{"ruleId":"45","severity":1,"message":"46","line":47,"column":30,"nodeType":"47","messageId":"48","endLine":47,"endColumn":32},{"ruleId":"45","severity":1,"message":"46","line":51,"column":34,"nodeType":"47","messageId":"48","endLine":51,"endColumn":36},{"ruleId":"45","severity":1,"message":"46","line":73,"column":33,"nodeType":"47","messageId":"48","endLine":73,"endColumn":35},{"ruleId":"49","severity":1,"message":"50","line":93,"column":6,"nodeType":"51","endLine":93,"endColumn":8,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":12,"column":21,"nodeType":"55","messageId":"56","endLine":12,"endColumn":29},{"ruleId":"53","severity":1,"message":"57","line":35,"column":9,"nodeType":"55","messageId":"56","endLine":35,"endColumn":20},{"ruleId":"53","severity":1,"message":"58","line":50,"column":5,"nodeType":"55","messageId":"56","endLine":50,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":54,"column":12,"nodeType":"61","messageId":"62","endLine":54,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":95,"column":33,"nodeType":"65","endLine":99,"endColumn":35},{"ruleId":"53","severity":1,"message":"66","line":14,"column":10,"nodeType":"55","messageId":"56","endLine":14,"endColumn":19},{"ruleId":"53","severity":1,"message":"67","line":17,"column":9,"nodeType":"55","messageId":"56","endLine":17,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":24,"column":7,"nodeType":"65","endLine":24,"endColumn":78},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNewPins'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'setBoard' is assigned a value but never used.","Identifier","unusedVar","'searchBoard' is assigned a value but never used.","'sizePin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'clickOpen' is assigned a value but never used.","'onClick' is assigned a value but never used.",{"desc":"69","fix":"70"},"Update the dependencies array to be: [getMyNewPins]",{"range":"71","text":"72"},[2453,2455],"[getMyNewPins]"]