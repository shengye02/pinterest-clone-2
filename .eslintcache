[{"/Users/jessythe/pinterest-clone/src/components/Pin.js":"1","/Users/jessythe/pinterest-clone/src/components/UserBoards.js":"2","/Users/jessythe/pinterest-clone/src/components/App.js":"3","/Users/jessythe/pinterest-clone/src/components/Mainboard.js":"4","/Users/jessythe/pinterest-clone/src/components/Header.js":"5","/Users/jessythe/pinterest-clone/src/components/UserProfileHeader.js":"6","/Users/jessythe/pinterest-clone/src/components/CreateBoardModal.js":"7"},{"size":6574,"mtime":1607550442297,"results":"8","hashOfConfig":"9"},{"size":595,"mtime":1607550004406,"results":"10","hashOfConfig":"9"},{"size":2680,"mtime":1607550587108,"results":"11","hashOfConfig":"9"},{"size":509,"mtime":1607550560307,"results":"12","hashOfConfig":"9"},{"size":3483,"mtime":1607521926822,"results":"13","hashOfConfig":"9"},{"size":8583,"mtime":1607518511520,"results":"14","hashOfConfig":"9"},{"size":193,"mtime":1607537784121,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cbspjm",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessythe/pinterest-clone/src/components/Pin.js",["32","33"],"/Users/jessythe/pinterest-clone/src/components/UserBoards.js",["34","35","36"],"import React from \"react\";\nimport \"./UserBoards.css\";\nimport \"./Pin.css\";\nimport Pin from \"./Pin\";\n\nfunction UserBoards(props) {\n  let { boards } = props;\n\n  const createBoard = (board) => {\n    console.log(board, \"hello new board!\");\n  };\n  return (\n    <div className=\"app__body\">\n      <div className=\"userboards\">\n        <h1>One Board here!</h1>\n        {boards.map((board) => {\n          console.log(board, \"what is board here in UserBoards\");\n          //   return <Board key={image.id} boardedPins={boardedPins} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default UserBoards;\n","/Users/jessythe/pinterest-clone/src/components/App.js",["37","38","39","40"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Mainboard from \"./Mainboard\";\nimport UserBoards from \"./UserBoards\";\nimport unsplash from \"../api/unsplash\";\nimport db from \"../firebase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport UserProfileHeader from \"./UserProfileHeader\";\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n  const [boards, setBoards] = useState([]);\n\n  const makeAPICall = (term) => {\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: { query: term },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    let promises = [];\n    let searchedPins = [];\n    promises.push(\n      makeAPICall(term).then((res) => {\n        searchedPins.push(res.data.results);\n      })\n    );\n    Promise.all(promises).then(() => {\n      console.log(searchedPins, \"what is in searchedPins?\");\n      setNewPins(searchedPins);\n    });\n  };\n\n  const getMyNewPins = () => {\n    db.collection(\"terms\").onSnapshot((snapshot) => {\n      let promises = [];\n      let pinData = [];\n\n      let snapshotData = snapshot.docs;\n      if (snapshotData.length >= 10) {\n        snapshotData = snapshotData.slice(\n          snapshotData.length - 5,\n          snapshotData.length\n        );\n      }\n      snapshotData.map((doc) => {\n        promises.push(\n          makeAPICall(doc.data().term).then((res) => {\n            let results = res.data.results;\n            results.map((object) => {\n              pinData.push(object);\n            });\n\n            pinData.sort(function (a, b) {\n              return 0.5 - Math.random();\n            });\n          })\n        );\n      });\n      Promise.all(promises).then(() => {\n        setNewPins(pinData);\n      });\n    });\n  };\n\n  const getMyBoards = () => {\n    console.log(\"now at App\");\n    let boards = [];\n    db.collection(\"boards\").onSnapshot((snapshot) => {\n      snapshot.doc.map((board) => {\n        boards.push(board.data());\n      });\n    });\n    setBoards(boards);\n  };\n\n  useEffect(() => {\n    getMyNewPins();\n    getMyBoards();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/mainboard\">\n            <Header onSubmit={onSearchSubmit} />\n            <Mainboard getBoards={getMyBoards} pins={pins} />\n          </Route>\n          <Route path=\"/userBoards\">\n            <Header onSubmit={onSearchSubmit} />\n            <UserProfileHeader />\n            {/* UserBoards needs the already pinned boardPin */}\n            <UserBoards boards={boards} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jessythe/pinterest-clone/src/components/Mainboard.js",[],"/Users/jessythe/pinterest-clone/src/components/Header.js",[],"/Users/jessythe/pinterest-clone/src/components/UserProfileHeader.js",[],"/Users/jessythe/pinterest-clone/src/components/CreateBoardModal.js",[],{"ruleId":"41","severity":1,"message":"42","line":53,"column":11,"nodeType":"43","endLine":56,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":107,"column":11,"nodeType":"43","endLine":110,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":11},{"ruleId":"44","severity":1,"message":"48","line":9,"column":9,"nodeType":"46","messageId":"47","endLine":9,"endColumn":20},{"ruleId":"49","severity":1,"message":"50","line":16,"column":29,"nodeType":"51","messageId":"52","endLine":16,"endColumn":31},{"ruleId":"49","severity":1,"message":"50","line":47,"column":30,"nodeType":"51","messageId":"52","endLine":47,"endColumn":32},{"ruleId":"49","severity":1,"message":"50","line":51,"column":34,"nodeType":"51","messageId":"52","endLine":51,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":71,"column":32,"nodeType":"51","messageId":"52","endLine":71,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":81,"column":6,"nodeType":"55","endLine":81,"endColumn":8,"suggestions":"56"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Pin' is defined but never used.","Identifier","unusedVar","'createBoard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNewPins'. Either include it or remove the dependency array.","ArrayExpression",["57"],{"desc":"58","fix":"59"},"Update the dependencies array to be: [getMyNewPins]",{"range":"60","text":"61"},[2119,2121],"[getMyNewPins]"]